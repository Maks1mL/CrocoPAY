{
    "Request To": "İstemek",
    "Merchant Payment Rest API Documentation": "Tüccar Ödeme REST API Belgeleri",
    "This document is a guide on how to integrate Merchant Payment with Rest API.": "Bu belge, Rest API ile Tüccar Ödemesi'nin nasıl entegre edileceğine dair bir rehberdir.",
    "The API is a restful web service, which accept form data as input. All methods are implemented as POST.": "API, form verilerini giriş olarak kabul eden bir RESTful web servisidir. Tüm yöntemler POST olarak uygulanmıştır.",
    "Before anything to do the user (who is paying to the merchant) must be logged in to get the authorization token.": "Kullanıcı (tüccara ödeme yapan) herhangi bir şey yapmadan önce yetkilendirme belirteci almak için giriş yapmalıdır.",
    "LOGIN VIA API": "API ÜZERİNDEN GİRİŞ",
    "SAMPLE REQUEST": "ÖRNEK TALEP",
    "BODY PARAMETER (form-data)": "BODY PARAMETER (form-data)",
    "Parameter": "Parametre",
    "Type": "Tür",
    "Sample": "Örnek",
    "email": "email",
    "Must be email": "E-posta olmalıdır",
    "Required": "Gerekli",
    "String": "Dize",
    "password": "password",
    "User Password": "Kullanıcı Şifresi",
    "Login Successful": "Giriş Başarılı",
    "Login Error": "Giriş Hatası",
    "N.B": "N.B",
    "You have to use this genereted TOKEN on all other steps as Authorization-token in the header section.": "Bu oluşturulan BELİRTEÇ'i diğer tüm adımlarda kullanmalısınız, başlık bölümünde Authorization-token olarak.",
    "Possible reasons for failure": "Başarısızlık için olası nedenler",
    "Credentials do not match, user suspended.": "Kimlik bilgileri uyuşmuyor, kullanıcı askıya alındı.",
    "End Point 1: Merchant Verify": "Nokta 1: Tüccar Doğrulama",
    "URL": "URL",
    "Go to merchant account": "Tüccar hesabına gidin",
    "Click gear icon of approved express merchant.": "Onaylanmış express tüccarın dişli simgesine tıklayın.",
    "From the modal copy Client id, Client Secret. This method is used to generate an access token.": "Modal pencereden Client id, Client Secret kopyalayın. Bu yöntem, bir erişim belirteci oluşturmak için kullanılır.",
    "If the merchant is approved by the admin, only then the gear icon will be available for that merchant. Authorization-token must be sent as header.": "Eğer tüccar admin tarafından onaylanmışsa, o zaman sadece dişli simge o tüccar için kullanılabilir. Authorization-token başlık olarak gönderilmelidir.",
    "HEADER PARAMETER": "HEADER PARAMETER",
    "client_id": "client_id",
    "Merchant Client ID": "Tüccar Müşteri Kimliği",
    "client_secret": "client_secret",
    "Merchant Secret": "Tüccar Sırrı",
    "Authorization-token": "Authorization-token",
    "Must be given in header, token that is generated after login response for user.": "Başlıkta verilmelidir, kullanıcı için giriş yanıtından sonra oluşturulan belirteç.",
    "Merchant exists": "Tüccar mevcut",
    "Merchant does not exist": "Tüccar mevcut değil",
    "You have to use this genereted access_token on next step as AUTHORIZATION": "Bu oluşturulan access_token'ı bir sonraki adımda AUTHORIZATION olarak kullanmalısınız",
    "Possible reason for failure": "Başarısızlık için olası neden",
    "The client_id or client_secret is invalid.": "client_id veya client_secret geçersiz.",
    "End Point - 2. Transaction Info": "Nokta - 2. İşlem Bilgisi",
    "We use this endpoint to store the payment information. Get the access token which is generated by verifying merchant in previous step. Use": "Bu uç noktayı ödeme bilgilerini saklamak için kullanıyoruz. Önceki adımda tüccarı doğrulayarak oluşturulan erişim belirtecini alın. Kullan",
    "as headers.": "başlıklar.",
    "is generated from": "şu yerden oluşturuldu",
    "You will need to set the Authorization: Bearer followed by the token value. Add successUrl and cancelUrl as you need. For currency code use ISO format.": "Authorization: Bearer'ı belirteç değerinden sonra ayarlamalısınız. İhtiyacınıza göre successUrl ve cancelUrl ekleyin. Para birimi kodu için ISO formatını kullanın.",
    "payer": "payer",
    "Who will receive the payment": "Kim ödemeyi alacak",
    "amount": "amount",
    "The amount User have to pay.": "Kullanıcının ödemesi gereken miktar.",
    "Double": "Double",
    "currency": "currency",
    "The payment occur on which currency, it should be ISO code.": "Hangi para biriminde ödeme yapılır, ISO kodu olmalıdır.",
    "Email of the user who is making the payment": "Ödemeyi yapan kullanıcının e-posta adresi",
    "Optional": "İsteğe bağlı",
    "successUrl": "successUrl",
    "Application dashboard url": "Uygulama gösterge paneli URL'si",
    "cancelUrl": "cancelUrl",
    "Application root url": "Uygulama kök URL'si",
    "Must be given in header, collect it from merchant verify": "Başlıkta verilmelidir, tüccar doğrulamasından toplayın",
    "Authorization": "Authorization",
    "Invalid Currency": "Geçersiz Para Birimi",
    "Amount Zero": "Miktar Sıfır",
    "Merchant Currency doesn’t exist, no successUrl & no cancelUrl, amount zero, Authorization token mismatch.": "Tüccarın para birimi mevcut değil, ne successUrl ne de cancelUrl, miktar sıfır, Authorization belirteci uyuşmuyor.",
    "After performing the above step, you will get grant_id and token. These value will be needed for the next step.": "Yukarıdaki adımı gerçekleştirdikten sonra grant_id ve belirteç alacaksınız. Bu değerler bir sonraki adım için gereklidir.",
    "End Point - 3. PAYMENT": "Nokta - 3. ÖDEME",
    "In this endpoint payment will success, Checks all kinds of input validation and redirected to payment page (if user not logged in then user have to login) if all validation passed. User have to decide to cancel or accept the payment. User grant_id & token as body parameter which is generated in previous step.": "Bu uç noktada ödeme başarılı olacak, tüm giriş doğrulamalarını kontrol eder ve ödeme sayfasına yönlendirilir (kullanıcı giriş yapmamışsa giriş yapması gerekir) eğer tüm doğrulamalar geçerse. Kullanıcı, ödemeyi iptal etmeye veya kabul etmeye karar vermelidir. Kullanıcı grant_id ve token'ı, önceki adımda oluşturulan bir vücut parametresi olarak.",
    "Get from endpoint-2": "Nokta-2'den alın",
    "Payment Success": "Ödeme Başarılı",
    "Merchant & User same": "Tüccar ve Kullanıcı aynı",
    "Grant Id or Token Mismatch": "Grant Id veya Token Uyuşmazlığı",
    "Insufficient Balance": "Yetersiz Bakiye",
    "End Point 4: PAYMENT CANCEL": "Nokta 4: ÖDEME İPTAL",
    "To cancel the payment this url is used. To cancel a payment, after endpoint #2 make a request to endpoint #4. Provide “Authorization-token” from": "Ödemeyi iptal etmek için bu URL kullanılır. Bir ödemeyi iptal etmek için, nokta #2'den sonra nokta #4'e bir istek yapın. Sağlayın \"Authorization-token\"",
    "and token from endpoint #2.": "ve nokta #2'den belirteç.",
    "Must be given in header, token that is generate after login response for user.": "Başlıkta verilmelidir, kullanıcı için giriş yanıtından sonra oluşturulan belirteç.",
    "SAMPLE RESPONSE": "ÖRNEK YANIT" 
}