{
    "Request To": "Request To",
    "Merchant Payment Rest API Documentation": "Merchant Payment Rest API Documentation",
    "This document is a guide on how to integrate Merchant Payment with Rest API.": "This document is a guide on how to integrate Merchant Payment with Rest API.",
    "The API is a restful web service, which accept form data as input. All methods are implemented as POST.": "The API is a restful web service, which accept form data as input. All methods are implemented as POST.",
    "Before anything to do the user (who is paying to the merchant) must be logged in to get the authorization token.": "Before anything to do the user (who is paying to the merchant) must be logged in to get the authorization token.",
    "LOGIN VIA API": "LOGIN VIA API",
    "SAMPLE REQUEST": "SAMPLE REQUEST",
    "BODY PARAMETER (form-data)": "BODY PARAMETER (form-data)",
    "Parameter": "Parameter",
    "Type": "Type",
    "Sample": "Sample",
    "email": "email",
    "Must be email": "Must be email",
    "Required": "Required",
    "String": "String",
    "password": "password",
    "User Password": "User Password",
    "Login Successful": "Login Successful",
    "Login Error": "Login Error",
    "N.B": "N.B",
    "You have to use this genereted TOKEN on all other steps as Authorization-token in the header section.": "You have to use this genereted TOKEN on all other steps as Authorization-token in the header section.",
    "Possible reasons for failure": "Possible reasons for failure",
    "Credentials do not match, user suspended.": "Credentials do not match, user suspended.",
    "End Point 1: Merchant Verify": "End Point 1: Merchant Verify",
    "URL": "URL",
    "Go to merchant account": "Go to merchant account",
    "Click gear icon of approved express merchant.": "Click gear icon of approved express merchant.",
    "From the modal copy Client id, Client Secret. This method is used to generate an access token.": "From the modal copy Client id, Client Secret. This method is used to generate an access token.",
    "If the merchant is approved by the admin, only then the gear icon will be available for that merchant. Authorization-token must be sent as header.": "If the merchant is approved by the admin, only then the gear icon will be available for that merchant. Authorization-token must be sent as header.",
    "HEADER PARAMETER": "HEADER PARAMETER",
    "client_id": "client_id",
    "Merchant Client ID": "Merchant Client ID",
    "client_secret": "client_secret",
    "Merchant Secret": "Merchant Secret",
    "Authorization-token": "Authorization-token",
    "Must be given in header, token that is generated after login response for user.": "Must be given in header, token that is generated after login response for user.",
    "Merchant exists": "Merchant exists",
    "Merchant does not exist": "Merchant does not exist",
    "You have to use this genereted access_token on next step as AUTHORIZATION": "You have to use this genereted access_token on next step as AUTHORIZATION",
    "Possible reason for failure": "Possible reason for failure",
    "The client_id or client_secret is invalid.": "The client_id or client_secret is invalid.",
    "End Point - 2. Transaction Info": "End Point - 2. Transaction Info",
    "We use this endpoint to store the payment information. Get the access token which is generated by verifying merchant in previous step. Use": "We use this endpoint to store the payment information. Get the access token which is generated by verifying merchant in previous step. Use",
    "as headers.": "as headers.",
    "is generated from": "is generated from",
    "You will need to set the Authorization: Bearer followed by the token value. Add successUrl and cancelUrl as you need. For currency code use ISO format.": "You will need to set the Authorization: Bearer followed by the token value. Add successUrl and cancelUrl as you need. For currency code use ISO format.",
    "payer": "payer",
    "Who will receive the payment": "Who will receive the payment",
    "amount": "amount",
    "The amount User have to pay.": "The amount User have to pay.",
    "Double": "Double",
    "currency": "currency",
    "The payment occur on which currency, it should be ISO code.": "The payment occur on which currency, it should be ISO code.",
    "Email of the user who is making the payment": "Email of the user who is making the payment",
    "Optional": "Optional",
    "successUrl": "successUrl",
    "Application dashboard url": "Application dashboard url",
    "cancelUrl": "cancelUrl",
    "Application root url": "Application root url",
    "Must be given in header, collect it from merchant verify": "Must be given in header, collect it from merchant verify",
    "Authorization": "Authorization",
    "Invalid Currency": "Invalid Currency",
    "Amount Zero": "Amount Zero",
    "Merchant Currency doesn’t exist, no successUrl & no cancelUrl, amount zero, Authorization token mismatch.": "Merchant Currency doesn’t exist, no successUrl & no cancelUrl, amount zero, Authorization token mismatch.",
    "After performing the above step, you will get grant_id and token. These value will be needed for the next step.": "After performing the above step, you will get grant_id and token. These value will be needed for the next step.",
    "End Point - 3. PAYMENT": "End Point - 3. PAYMENT",
    "In this endpoint payment will success, Checks all kinds of input validation and redirected to payment page (if user not logged in then user have to login) if all validation passed. User have to decide to cancel or accept the payment. User grant_id & token as body parameter which is generated in previous step.": "In this endpoint payment will success, Checks all kinds of input validation and redirected to payment page (if user not logged in then user have to login) if all validation passed. User have to decide to cancel or accept the payment. User grant_id & token as body parameter which is generated in previous step.",
    "Get from endpoint-2": "Get from endpoint-2",
    "Payment Success": "Payment Success",
    "Merchant & User same": "Merchant & User same",
    "Grant Id or Token Mismatch": "Grant Id or Token Mismatch",
    "Insufficient Balance": "Insufficient Balance",
    "End Point 4: PAYMENT CANCEL": "End Point 4: PAYMENT CANCEL",
    "To cancel the payment this url is used. To cancel a payment, after endpoint #2 make a request to endpoint #4. Provide “Authorization-token” from": "To cancel the payment this url is used. To cancel a payment, after endpoint #2 make a request to endpoint #4. Provide “Authorization-token” from",
    "and token from endpoint #2.": "and token from endpoint #2.",
    "Must be given in header, token that is generate after login response for user.": "Must be given in header, token that is generate after login response for user.",
    "SAMPLE RESPONSE": "SAMPLE RESPONSE" 
}