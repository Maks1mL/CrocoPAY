{
    "Request To": "Запрос на",
    "Merchant Payment Rest API Documentation": "Документация REST API для платежей мерчанта",
    "This document is a guide on how to integrate Merchant Payment with Rest API.": "Этот документ является руководством по интеграции Merchant Payment с REST API.",
    "The API is a restful web service, which accept form data as input. All methods are implemented as POST.": "API - это RESTful веб-сервис, который принимает форму данных в качестве входных данных. Все методы реализованы как POST.",
    "Before anything to do the user (who is paying to the merchant) must be logged in to get the authorization token.": "Прежде чем пользователь (кто платит мерчанту) сможет сделать что-либо, он должен войти в систему, чтобы получить токен авторизации.",
    "LOGIN VIA API": "ВХОД ЧЕРЕЗ API",
    "SAMPLE REQUEST": "ПРИМЕР ЗАПРОСА",
    "BODY PARAMETER (form-data)": "ПАРАМЕТР ТЕЛА (form-data)",
    "Parameter": "Параметр",
    "Type": "Тип",
    "Sample": "Пример",
    "email": "email",
    "Must be email": "Должен быть email",
    "Required": "Обязательно",
    "String": "Строка",
    "password": "password",
    "User Password": "Пароль пользователя",
    "Login Successful": "Успешный вход",
    "Login Error": "Ошибка входа",
    "N.B": "N.B",
    "You have to use this genereted TOKEN on all other steps as Authorization-token in the header section.": "Вы должны использовать этот сгенерированный ТОКЕН на всех следующих шагах как Authorization-token в заголовке.",
    "Possible reasons for failure": "Возможные причины сбоя",
    "Credentials do not match, user suspended.": "Учетные данные не совпадают, пользователь заблокирован.",
    "End Point 1: Merchant Verify": "Точка окончания 1: Подтверждение мерчанта",
    "URL": "URL",
    "Go to merchant account": "Перейти к учетной записи мерчанта",
    "Click gear icon of approved express merchant.": "Щелкните значок шестеренки утвержденного мерчанта.",
    "From the modal copy Client id, Client Secret. This method is used to generate an access token.": "Скопируйте из модального окна Client id, Client Secret. Этот метод используется для генерации токена доступа.",
    "If the merchant is approved by the admin, only then the gear icon will be available for that merchant. Authorization-token must be sent as header.": "Если мерчант одобрен администратором, только тогда значок шестеренки будет доступен для этого мерчанта. Authorization-token должен быть отправлен в заголовке.",
    "HEADER PARAMETER": "ПАРАМЕТР ЗАГОЛОВКА",
    "client_id": "client_id",
    "Merchant Client ID": "ID клиента мерчанта",
    "client_secret": "client_secret",
    "Merchant Secret": "Секрет мерчанта",
    "Authorization-token": "Authorization-token",
    "Must be given in header, token that is generated after login response for user.": "Должен быть указан в заголовке, токен, который генерируется после ответа на вход для пользователя.",
    "Merchant exists": "Мерчант существует",
    "Merchant does not exist": "Мерчант не существует",
    "You have to use this genereted access_token on next step as AUTHORIZATION": "Вы должны использовать этот сгенерированный access_token на следующем шаге как AUTHORIZATION",
    "Possible reason for failure": "Возможная причина сбоя",
    "The client_id or client_secret is invalid.": "Недействительный client_id или client_secret.",
    "End Point - 2. Transaction Info": "Точка окончания - 2. Информация о транзакции",
    "We use this endpoint to store the payment information. Get the access token which is generated by verifying merchant in previous step. Use": "Мы используем эту конечную точку для хранения информации о платеже. Получите токен доступа, который генерируется при проверке мерчанта на предыдущем шаге. Используйте",
    "as headers.": "как заголовки.",
    "is generated from": "генерируется из",
    "You will need to set the Authorization: Bearer followed by the token value. Add successUrl and cancelUrl as you need. For currency code use ISO format.": "Вам нужно установить Authorization: Bearer, за которым следует значение токена. Добавьте successUrl и cancelUrl по мере необходимости. Для кода валюты используйте формат ISO.",
    "payer": "плательщик",
    "Who will receive the payment": "Кто получит платеж",
    "amount": "сумма",
    "The amount User have to pay.": "Сумма, которую пользователь должен заплатить.",
    "Double": "Двойной",
    "currency": "валюта",
    "The payment occur on which currency, it should be ISO code.": "Платеж производится в какой валюте, это должен быть код ISO.",
    "Email of the user who is making the payment": "Email пользователя, совершающего платеж",
    "Optional": "Необязательно",
    "successUrl": "successUrl",
    "Application dashboard url": "URL панели приложения",
    "cancelUrl": "cancelUrl",
    "Application root url": "URL корня приложения",
    "Must be given in header, collect it from merchant verify": "Должен быть указан в заголовке, соберите его из подтверждения мерчанта",
    "Authorization": "Authorization",
    "Invalid Currency": "Недопустимая валюта",
    "Amount Zero": "Сумма равна нулю",
    "Merchant Currency doesn’t exist, no successUrl & no cancelUrl, amount zero, Authorization token mismatch.": "Валюта мерчанта не существует, нет successUrl и no cancelUrl, сумма ноль, несоответствие токена авторизации.",
    "After performing the above step, you will get grant_id and token. These value will be needed for the next step.": "После выполнения вышеуказанного шага вы получите grant_id и токен. Эти значения будут необходимы для следующего шага.",
    "End Point - 3. PAYMENT": "Точка окончания - 3. ПЛАТЕЖ",
    "In this endpoint payment will success, Checks all kinds of input validation and redirected to payment page (if user not logged in then user have to login) if all validation passed. User have to decide to cancel or accept the payment. User grant_id & token as body parameter which is generated in previous step.": "В этой конечной точке платеж будет успешным, проверяются все виды валидации ввода и перенаправляются на страницу платежа (если пользователь не вошел в систему, то ему нужно войти в систему), если пройдена вся валидация. Пользователь должен решить отменить или принять платеж. Пользователь grant_id и token в качестве параметра тела, который генерируется на предыдущем шаге.",
    "Get from endpoint-2": "Получить из точки окончания-2",
    "Payment Success": "Успех платежа",
    "Merchant & User same": "Мерчант и пользователь одинаковы",
    "Grant Id or Token Mismatch": "Несоответствие Grant Id или Token",
    "Insufficient Balance": "Недостаточный баланс",
    "End Point 4: PAYMENT CANCEL": "Точка окончания 4: ОТМЕНА ПЛАТЕЖА",
    "To cancel the payment this url is used. To cancel a payment, after endpoint #2 make a request to endpoint #4. Provide “Authorization-token” from": "Чтобы отменить платеж, используется этот URL. Чтобы отменить платеж, после точки окончания #2 выполните запрос к точке окончания #4. Укажите “Authorization-token” из",
    "and token from endpoint #2.": "и токен из точки окончания #2.",
    "Must be given in header, token that is generate after login response for user.": "Должен быть указан в заголовке, токен, который генерируется после ответа на вход для пользователя.",
    "SAMPLE RESPONSE": "ПРИМЕР ОТВЕТА"   
}